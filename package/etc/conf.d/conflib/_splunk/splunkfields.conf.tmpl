#Used to set indexed fields we will always use to global defaults
rewrite r_set_splunk_default {
      set("SC4S:$SOURCE", value(".splunk.source"));
{{- if (split (getenv "SC4S_DEST_SPLUNK_INDEXED_FIELDS" "container,log_host,dport,fromhostip,proto") ",") has "facility" }}
      set($FACILITY, value("fields.sc4s_syslog_facility"));
{{- end}}      
{{- if (split (getenv "SC4S_DEST_SPLUNK_INDEXED_FIELDS" "container,log_host,dport,fromhostip,proto") ",") has "severity" }}
      set($LEVEL, value("fields.sc4s_syslog_severity"));
{{- end}}      
{{- if (split (getenv "SC4S_DEST_SPLUNK_INDEXED_FIELDS" "container,log_host,dport,fromhostip,proto") ",") has "log_host" }}
{{- if (getenv "SC4S_CONTAINER_HOST") }}
      set("{{ getenv "SC4S_CONTAINER_HOST" }}", value("fields.sc4s_log_host"));
{{- end}}      
{{- end}}      
{{- if (split (getenv "SC4S_DEST_SPLUNK_INDEXED_FIELDS" "container,log_host,dport,fromhostip,proto") ",") has "container" }}
      set($LOGHOST, value("fields.sc4s_container"));
{{- end}}      
{{- if (split (getenv "SC4S_DEST_SPLUNK_INDEXED_FIELDS" "container,log_host,dport,fromhostip,proto") ",") has "fromhostip" }}
      set($SOURCEIP, value("fields.sc4s_fromhostip"));
{{- end}}      
{{- if (split (getenv "SC4S_DEST_SPLUNK_INDEXED_FIELDS" "container,log_host,destport,fromhostip,proto") ",") has "destport" }}
      set($DESTPORT, value("fields.sc4s_destport"));
{{- end}}    
{{- if (split (getenv "SC4S_DEST_SPLUNK_INDEXED_FIELDS" "container,log_host,destport,fromhostip,proto") ",") has "proto" }}
      set($PROTO, value("fields.sc4s_proto"));
{{- end}}    
};
#used by each log-path to set index and sourcetype which may be
#overridden by user defined values
block rewrite r_set_splunk_dest_default(
                              index()
                              source("${.splunk.source}")
                              sourcetype()
                              template(`splunk-template`)
                           ) {
      set("`index`", value(".splunk.index"));
      set("`source`", value(".splunk.source"));
      set("`sourcetype`", value(".splunk.sourcetype"));
};



