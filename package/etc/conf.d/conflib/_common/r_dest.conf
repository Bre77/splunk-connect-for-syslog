python {
import os
def get_template_env_var(log_message,option):
    result = ""
    try:
        group = log_message['.dest_key'].decode("utf-8")
        option_decoded = option.decode("utf-8")
    
        result=os.getenv(f"SC4S_DEST_{ group }_{ option_decoded }", "no")
    except:
        pass

    return result
};

rewrite r_set_destinations{

    set("yes", 
        value(".dest.global.hec") 
        condition(
            '$(if ("`SC4S_DEST_SPLUNK_HEC_GLOBAL`" ne "") "`SC4S_DEST_SPLUNK_HEC_GLOBAL`" "yes")' ne "no"
            or '$(python get_template_env_var SPLUNK_HEC)' eq "yes"                    
        )
    );     
    set('SC4S_DEST_${.dest_key}_ARCHIVE', 
        value(".dest.global.test") 
    );       
    set('$(python get_template_env_var ARCHIVE)', 
        value(".dest.global.test2") 
    );       
    set("yes", 
        value(".dest.global.archive") 
        condition(
            '$(if ("`SC4S_ARCHIVE_GLOBAL`" ne "") "`SC4S_ARCHIVE_GLOBAL`" "no")' ne "no"
            or '$(python get_template_env_var ARCHIVE)' eq "yes"
        ) 
    );
    set("yes", 
        value(".dest.global.alts") 
        condition(
            '$(if ("`SC4S_DEST_GLOBAL_ALTERNATES`" ne "") "yes" "no")' ne "no"
        ) 
    );
    set("$(python get_template_env_var ALTERNATES)", 
        value(".dest.select.alts") 
        condition(
            '$(python get_template_env_var ALTERNATES)' ne "no"
        ) 
    );
    set("$(python get_template_env_var FILTERED_ALTERNATES)", 
        value(".dest.select.filteredalts") 
        condition(
            '$(python get_template_env_var FILTERED_ALTERNATES)' ne "no"               
        ) 
    );      
};
